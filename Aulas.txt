//Aula 283
//Passando um objeto Department para formulário DepartmentForm.
//O motivo é porque este formulário vai servir tanto para a gente inserir
//um novo Departamento no Banco de Daods quanto pra atualizar um Departamento
//existente.
// Vamos criar uma dependência para um Departamento com o metodo set.
// Vamos criar um método para atualizar os dados do formulario com base neste objeto Department

// No DepartmentListController atualizar o método onBtNewAction e createDialogForm

// Em onBtNewAction como é um botão para cadastrar um novo Departament, o formulario
// começará vazio.
// Entao preciso instanciar um departamento vazio ( Department obj = new Department(); )
// Agora preciso injetar este obj no controlador do formulário.
// Pra isso foi colocado um parametro a mais em createDialogForm ( obj )

//Aula 284

// Na classe Utils , implementar o método tryParseToInt para ajudar a converter o valor da // caixinha pra inteiro

// Na classe DepartmentService, criar o método saveOrUpdate que vai ser um método para 
// inserir um Departamente no banco ou atualizar um existente

// Na calsse DepartmentFormController , criar uma dependência com o DepartmentService com // método set
// Implementar a ação de onBtSaveAction e onBtCancelAction.

// Na Classe DepartmentListController, injetar a dependência de DepartmentService

//Aula 285

// criar uma interface DataChangeListener

// A classe DepartmentFormController sera subject, ou seja a classe que vai emitir o // evento.
// A classe DepartmentFormController terá uma lista ( List<DataChangeListener> ) que irá // guardar os objetos interessados em receber o evento. Para que esses objetos possam se // inscrever para receber a lista, preciso disponibilizar um metodo // subscribeDataChangeListener()

// No DepartmentListController implementar a interface DataChangeListener

//Aula 286
// Vamos implementar uma validação de dados e assim criar uma exceção personalizada de
// validação.
// Criar a classe ValidationException

// Na classe DepartmentFormController, implementar algumas verificações e lançar a // validation exception se for o caso.
// Implementar o método setErrorMessages.
// No método onBtSaveAction dar um catch no Validation Exception 

//Aula 287
// Fazer a operação de atualização de departamento.
// Criar um novo atributo tableColumnEDIT na clase DepartmentListController
// Criar um método initEditButtons que vai criar um botão de edição em cada linha da tabela
// (É um código específico tirado do stackoverflow)